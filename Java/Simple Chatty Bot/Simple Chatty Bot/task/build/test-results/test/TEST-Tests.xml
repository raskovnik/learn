<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Tests" tests="1" skipped="0" failures="1" errors="0" timestamp="2022-10-18T20:51:38" hostname="raskovnic-pc" time="1.008">
  <properties/>
  <testcase name="start" classname="Tests" time="1.008">
    <failure message="java.lang.AssertionError: Wrong answer in test #1&#10;&#10;You should output at least 21 lines (for the count number 10).&#10;Lines found: 20&#10;Your output:&#10;Hello! My name is Aid.&#10;I was created in 2018.&#10;Please, remind me your name.&#10;What a great name you have, Marry!&#10;Let me guess your age.&#10;Enter remainders of dividing your age by 3, 5 and 7.&#10;Your age is 40; that's a good time to start programming!&#10;Now I will prove to you that I can count to any number you want.&#10;0!&#10;1!&#10;2!&#10;3!&#10;4!&#10;5!&#10;6!&#10;7!&#10;8!&#10;9!&#10;10!&#10;Congratulations, have a nice day!&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;Hello! My name is Aid.&#10;I was created in 2018.&#10;Please, remind me your name.&#10;&gt; Marry&#10;What a great name you have, Marry!&#10;Let me guess your age.&#10;Enter remainders of dividing your age by 3, 5 and 7.&#10;&gt; 1&#10;&gt; 0&#10;&gt; 5&#10;Your age is 40; that's a good time to start programming!&#10;Now I will prove to you that I can count to any number you want.&#10;&gt; 10&#10;0!&#10;1!&#10;2!&#10;3!&#10;4!&#10;5!&#10;6!&#10;7!&#10;8!&#10;9!&#10;10!&#10;Congratulations, have a nice day!" type="java.lang.AssertionError">java.lang.AssertionError: Wrong answer in test #1

You should output at least 21 lines (for the count number 10).
Lines found: 20
Your output:
Hello! My name is Aid.
I was created in 2018.
Please, remind me your name.
What a great name you have, Marry!
Let me guess your age.
Enter remainders of dividing your age by 3, 5 and 7.
Your age is 40; that's a good time to start programming!
Now I will prove to you that I can count to any number you want.
0!
1!
2!
3!
4!
5!
6!
7!
8!
9!
10!
Congratulations, have a nice day!

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

Hello! My name is Aid.
I was created in 2018.
Please, remind me your name.
&gt; Marry
What a great name you have, Marry!
Let me guess your age.
Enter remainders of dividing your age by 3, 5 and 7.
&gt; 1
&gt; 0
&gt; 5
Your age is 40; that's a good time to start programming!
Now I will prove to you that I can count to any number you want.
&gt; 10
0!
1!
2!
3!
4!
5!
6!
7!
8!
9!
10!
Congratulations, have a nice day!
	at org.junit.Assert.fail(Assert.java:89)
	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:203)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Hello! My name is Aid.
I was created in 2018.
Please, remind me your name.
> Marry
What a great name you have, Marry!
Let me guess your age.
Enter remainders of dividing your age by 3, 5 and 7.
> 1
> 0
> 5
Your age is 40; that's a good time to start programming!
Now I will prove to you that I can count to any number you want.
> 10
0!
1!
2!
3!
4!
5!
6!
7!
8!
9!
10!
Congratulations, have a nice day!
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
